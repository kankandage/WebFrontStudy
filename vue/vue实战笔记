1. vue渐进式框架 构建用户界面 view 
    只关心视图层
    1. 声明式渲染  2.组件系统 3.客户端路由 4.大规模状态管理 5.
2.核心点：1.响应的数据绑定
         2.利用Object.defineProperty 中的setter/getter代理数据，监控对数据的操作


3.可组合的视图组件 

4.虚拟DOM
  js快 DOM操作慢
  
  虚拟DOM
    模板 ---- render Function ----虚拟DOM tree

5.MVVM     M：model  V：view  VM View-Model 视图模型

6.vm 实例
  每一个应用都是Vue 这个构造函数

7.声明式渲染


8.指令 一种特殊的自定义间属性 职责是当其表达式值改变相应变化 以V-为开头


9.html 模板



10.组件化开发：核心思路就是将巨大的东西拆分成粒度合理的小东西


11.组件基本组成 
  1.样式结构
  2.行为逻辑
  3.数据

12.组件的通讯  
  父组件---->子组件 组件上使用
  子组件----->父组件  父组件用$on监听事件

13.单向数据流
  数据只能父组件，只能单向绑定
  子组件内部不应该修改父组件传递过来的值


  改变prop的情况 
    1.作为data中的局部数据的初始中
    2.作为子组件中computed树属性

14.props验证

  组件可以为props指定验证要求。如果未指定验证要求，Vue会发出警告
  props:{
    proA：Number,//指定类型
    propB:[Stirng,Number]，//多种类型

  }

15.使用slot分发内容
  混合父组件的内容与子组件的内容自己模板,成为内容分发


16.封装组件
  每个组件提供标准且简单的应用接口,提供简单的应用接口
  1.重用性
  2.可制定性
  3.高内聚性
  4.互操作性

  Vue组件API 
    1.props参数 传递数据给组件
    2.slot定制模板 外部模板混合组件模板
    3.event自定义事件 监控子组件交互状态

