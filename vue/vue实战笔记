1.Vue介绍
 1.构建用户界面的渐进式界面  易用 灵活 高效
 2.框架与库
    库，是一封装好的特定方式的集合，提供该开发者使用，库没有控制权，控制权在使用者手中； 代表：jQurey、underscore、util
    框架，是一套架构，会基于自身特点给用户提供一套相当完整的解决方案，而且控制权在框架本身，使用者要找框架所规定的某种规范进行开发 代表：backbone,angular,Vue
 3.响应的数据绑定 
    当数据发生改变时，视图自动更新
4. 指令directive 
    一种特殊的自行定义行间属性，以v-开头将数据和DOM做关联，当表达式的值改变时，响应式的作用在视图
    1.v-bind:表达式
    2.v-on ：表达式  绑定方法
    3.双向数据绑定
        Vue将数据对象和DOM进行绑定，彼此之间相互影响，
            数据的改变会引起DOM的改变 DOM的改变也会引起数据变化
      v-model： 1.负责监听用户输入事件以更新数据  （绑在创建双向数据绑定的元素上）
                2.会根据控件类型自动选取正确的方法来更新元素交互的值
    4.
5.MVVM模式
 M:model 数据
 V:view 视图
 V-M:view-model

6.响应的数据变化
    如果没有定义某个属性，那么就不能检测属性变化

7.条件判断

8.计算属性： 

9.响应式原理
    将一个普通的JavaScript对象传给Vue实例的data选项，Vue将遍历此对象所有属性，并使用Object.defineProperty将这些属性全部转为getter/setter
    Vue内部会对数据进行劫持操作，进行追踪依赖，在属性被访问和修改时通知变化

10.声明式渲染理解
    1.DOM状态只是数据状态的一个映射
    2.所有的逻辑尽可能在状态的层面去进行
    3.当状态改变了，view会被框架自动更新到合理的状态
11.v-text 
   v-text更新文本，可以代替{{}}
12.v-html
   更新元素的innerHTML
   //HTML必须是可靠的
13 v-clock 
    隐藏未编译的Mustache标签直到实例准备完毕
14. v-once
    只渲染一遍 用于静态内容

15.事件修饰符：
    方法只有存粹的数据逻辑，而不是去处理DOM事件细节
    语法：@事件名.修饰符.修饰符 = "事件处理函数"
        .stop .prevent .capture .self .once
        按键修饰符 .enter .tab .delete .esc .space .up .down .left .right    





1.vue渐进式Javascript的框架 
    1.构建用户界面的渐进式框架，只关注视图层 
    2.声明式渲染 组件系统 客户端路由 大规模状态管理 构建工具
2.核心点
    1.响应的数据绑定
    2.组合的视图组件
        2.1 ui页面映射为组件树
        2.2 划分组件可维护、可重用、可测试
3.虚拟DOM
   1.在元素改变的地方去改变对应的
   模板 (compile) 渲染函数 (rander) 虚拟DOM树 (creat) 真实DOM树
4.MVVM 模式
    1.M:Model 数据模式
    2.V:View  视图模式
    3.vm:view-Model 视图模型* (绑定数据 监听数据)

1. vue渐进式框架 构建用户界面 view 
    只关心视图层
    1. 声明式渲染  2.组件系统 3.客户端路由 4.大规模状态管理 5.
2.核心点：1.响应的数据绑定
         2.利用Object.defineProperty 中的setter/getter代理数据，监控对数据的操作


3.可组合的视图组件 

4.虚拟DOM
  js快 DOM操作慢
  
  虚拟DOM
    模板 ---- render Function ----虚拟DOM tree

5.MVVM     M：model  V：view  VM View-Model 视图模型

6.vm 实例
  每一个应用都是Vue 这个构造函数

7.声明式渲染


8.指令 一种特殊的自定义间属性 职责是当其表达式值改变相应变化 以V-为开头


9.html 模板



10.组件化开发：核心思路就是将巨大的东西拆分成粒度合理的小东西


11.组件基本组成 
  1.样式结构
  2.行为逻辑
  3.数据

12.组件的通讯  
  父组件---->子组件 组件上使用
  子组件----->父组件  父组件用$on监听事件

13.单向数据流
  数据只能父组件，只能单向绑定
  子组件内部不应该修改父组件传递过来的值


  改变prop的情况 
    1.作为data中的局部数据的初始中
    2.作为子组件中computed树属性

14.props验证

  组件可以为props指定验证要求。如果未指定验证要求，Vue会发出警告
  props:{
    proA：Number,//指定类型
    propB:[Stirng,Number]，//多种类型

  }

15.使用slot分发内容
  混合父组件的内容与子组件的内容自己模板,成为内容分发


16.封装组件
  每个组件提供标准且简单的应用接口,提供简单的应用接口
  1.重用性
  2.可制定性
  3.高内聚性
  4.互操作性

  Vue组件API 
    1.props参数 传递数据给组件
    2.slot定制模板 外部模板混合组件模板
    3.event自定义事件 监控子组件交互状态
  
Vue组件设计与实践