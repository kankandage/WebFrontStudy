1.用对象的思想去写代码，就是面向对象编程。
    -过程式写法
    -面向对象写法

    1.1 系统自带的对象叫系统对象。


2.面向对象编程的特点 OOP
    1.抽象：抓住核心问题  //
    2.封装：只能通过对象来访问方法 //
    3.继承：从已有对象上继承出新的对象  //复用
    4.
    

3.对象的组成
    1.方法:---函数：动态
    2.属性：---静态：变量

4.要注意面向对象时的this指向
    1.对于普通函数，谁调用this指向谁;对于箭头函数，哪里定义指向哪里
    2.事件处理函数中的this，该事件由谁触发，this指的就是谁
    3.函数.call会直接调用该函数，并且call的第0个参数就是 函数执行时候的this,后面的参数是函数执行的时候的参数。

5.工厂模式：封装函数
    当new去调用一函数：这个时候函数中的this就是创建出来的对象，而且函数的返回值直接就是this(隐式返回)

6.对象的引用
    1.基本对象是复制引用，对象是引用的传递
    2.判断相同：基本对象是值相同，对象类型是值和引用都相同。

7.原型prototype
    1.去改写对象下面公用的方法或者属性，让公用的方法或属性在内存中存在一份(提高性能)

8.面向对象的写法总结：
    //面向对象的写法
        // function 构造函数(){
        //     this.属性
        // }

        // 构造函数.原型.方法 = function(){}

        // var 对象1 = new 构造函数();
        // 对象1.方法();

9.将传统过程式写法改写成面向对象
    1.写出传统式写法
    2.将传统式写法改写 
        注意：
            尽量不要嵌套函数
            可以有全局变量
            把onload中不是赋值的语句单独放到函数中
    3.写成面向对象的写法
        注意：
            全局变量是属性
            函数是方法
            onloand中创建对象

10.
    JS基本类型都有自己对应的包装对象：例如：String Number Boolean
        注意：基本类型会找到对应的包装对象类型，然后包装对象把所有的属性和方法给了基本类型，然后包装对象消失

11.原型链
    //实例对象与原型之间的连接，叫做原型链
    //原型的最外层：object.prototype

12.面向对象的属性和方法
    1.hasOwnProperty：看看是不是对象自身下面属性
    2.instanof   对象与构造函数在原型链上是否有关系
    3.constructor：查看对象的构造函数

13.
    1.什么是继承
       在原有对象的基础上，略做修改，得到一个新对象(代码复用 )
       不影响原有对象的功能

    2.如何添加继承
       属性的继承：调用父类的构造函数 call
       方法的继承 ： for in 拷贝继承（jquery也是采用拷贝继承extend）

    3.继承方法
       1.CreateStar.prototype =  CreatePerson.prototype;  //引用问题  修改子类会影响父类
       2.for in 拷贝继承（jquery也是采用拷贝继承extend）
       3.类式继承
            1.类式继承 利用构造函数 
            2.类：JS 是没有类的概念的，把构造函数看作是类
       4.原型继承


组件：
    1.对面向对象的深入应用(UI组件，功能组件)
    2.将配置参数、方法、事件，三者进行分离

创建自定义事件：
    1.可以做多人协作开发





